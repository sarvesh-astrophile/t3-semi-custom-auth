import "@/styles/globals.css";

import type { Metadata } from "next";
import { Geist } from "next/font/google";

import { TRPCReactProvider } from "@/trpc/react";
import { headers } from "next/headers";
import { Toaster } from "@/components/ui/sonner";
import { StagewiseToolbar } from "@stagewise/toolbar-next";

export const metadata: Metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

const geist = Geist({
  subsets: ["latin"],
  variable: "--font-geist-sans",
});

const stagewiseConfig = {
  plugins: [],
};

export default async function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  const headersList = await headers();
  return (
    <html lang="en" className={`${geist.variable}`}>
      <body>
        <TRPCReactProvider headers={headersList}>
          {children}
          <Toaster richColors theme="light" />
        </TRPCReactProvider>
        {process.env.NODE_ENV === "development" && (
          <StagewiseToolbar config={stagewiseConfig} />
        )}
      </body>
    </html>
  );
}
